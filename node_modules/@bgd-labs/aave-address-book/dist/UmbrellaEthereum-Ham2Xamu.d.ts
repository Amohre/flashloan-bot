declare const UMBRELLA = "0xD400fc38ED4732893174325693a63C30ee3881a8";
declare const UMBRELLA_IMPL = "0x929e21D24D3f2A529621AdC248D227012B72646d";
declare const UMBRELLA_STAKE_TOKEN_IMPL = "0x75e8aC0c063B6966E2A9954adEdf39BdE9370197";
declare const UMBRELLA_REWARDS_CONTROLLER = "0x4655Ce3D625a63d30bA704087E52B4C31E38188B";
declare const UMBRELLA_REWARDS_CONTROLLER_IMPL = "0x85C3371044e49782DbE3dC23de1D77a078aFb5d0";
declare const PERMISSIONED_PAYLOADS_CONTROLLER = "0xF86F77F7531B3374274E3f725E0A81D60bC4bB67";
declare const PERMISSIONED_PAYLOADS_CONTROLLER_EXECUTOR = "0x2759de67aD133C747C9f41d56F1b8A343cE679a1";
declare const UMBRELLA_BATCH_HELPER = "0xCe6Ced23118EDEb23054E06118a702797b13fc2F";
declare const UMBRELLA_CONFIG_ENGINE = "0x3f3EfAeba02bbA78BA7E89Dc6Ec503C8fe5fd5a4";
declare const DATA_AGGREGATION_HELPER = "0x5061c5aAEA55442a886fBC77dfD40e8489D1c07c";
declare const DEFICIT_OFFSET_CLINIC_STEWARD = "0x6c1DC85f2aE71C3DAcd6E44Bb57DEeF61b540a5A";
declare const CHAIN_ID = 1;
declare const UMBRELLA_STAKE_ASSETS: {
    readonly STK_WA_USDC_V1: {
        readonly STAKE_TOKEN: "0x6bf183243FdD1e306ad2C4450BC7dcf6f0bf8Aa6";
        readonly UNDERLYING: "0xD4fa2D31b7968E448877f69A96DE69f5de8cD23E";
        readonly decimals: 6;
    };
    readonly STK_WA_USDT_V1: {
        readonly STAKE_TOKEN: "0xA484Ab92fe32B143AEE7019fC1502b1dAA522D31";
        readonly UNDERLYING: "0x7Bc3485026Ac48b6cf9BaF0A377477Fff5703Af8";
        readonly decimals: 6;
    };
    readonly STK_WA_WETH_V1: {
        readonly STAKE_TOKEN: "0xaAFD07D53A7365D3e9fb6F3a3B09EC19676B73Ce";
        readonly UNDERLYING: "0x0bfc9d54Fc184518A81162F8fB99c2eACa081202";
        readonly decimals: 18;
    };
    readonly STK_GHO_V1: {
        readonly STAKE_TOKEN: "0x4f827A63755855cDf3e8f3bcD20265C833f15033";
        readonly UNDERLYING: "0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f";
        readonly decimals: 18;
    };
};

declare const UmbrellaEthereum_CHAIN_ID: typeof CHAIN_ID;
declare const UmbrellaEthereum_DATA_AGGREGATION_HELPER: typeof DATA_AGGREGATION_HELPER;
declare const UmbrellaEthereum_DEFICIT_OFFSET_CLINIC_STEWARD: typeof DEFICIT_OFFSET_CLINIC_STEWARD;
declare const UmbrellaEthereum_PERMISSIONED_PAYLOADS_CONTROLLER: typeof PERMISSIONED_PAYLOADS_CONTROLLER;
declare const UmbrellaEthereum_PERMISSIONED_PAYLOADS_CONTROLLER_EXECUTOR: typeof PERMISSIONED_PAYLOADS_CONTROLLER_EXECUTOR;
declare const UmbrellaEthereum_UMBRELLA: typeof UMBRELLA;
declare const UmbrellaEthereum_UMBRELLA_BATCH_HELPER: typeof UMBRELLA_BATCH_HELPER;
declare const UmbrellaEthereum_UMBRELLA_CONFIG_ENGINE: typeof UMBRELLA_CONFIG_ENGINE;
declare const UmbrellaEthereum_UMBRELLA_IMPL: typeof UMBRELLA_IMPL;
declare const UmbrellaEthereum_UMBRELLA_REWARDS_CONTROLLER: typeof UMBRELLA_REWARDS_CONTROLLER;
declare const UmbrellaEthereum_UMBRELLA_REWARDS_CONTROLLER_IMPL: typeof UMBRELLA_REWARDS_CONTROLLER_IMPL;
declare const UmbrellaEthereum_UMBRELLA_STAKE_ASSETS: typeof UMBRELLA_STAKE_ASSETS;
declare const UmbrellaEthereum_UMBRELLA_STAKE_TOKEN_IMPL: typeof UMBRELLA_STAKE_TOKEN_IMPL;
declare namespace UmbrellaEthereum {
  export { UmbrellaEthereum_CHAIN_ID as CHAIN_ID, UmbrellaEthereum_DATA_AGGREGATION_HELPER as DATA_AGGREGATION_HELPER, UmbrellaEthereum_DEFICIT_OFFSET_CLINIC_STEWARD as DEFICIT_OFFSET_CLINIC_STEWARD, UmbrellaEthereum_PERMISSIONED_PAYLOADS_CONTROLLER as PERMISSIONED_PAYLOADS_CONTROLLER, UmbrellaEthereum_PERMISSIONED_PAYLOADS_CONTROLLER_EXECUTOR as PERMISSIONED_PAYLOADS_CONTROLLER_EXECUTOR, UmbrellaEthereum_UMBRELLA as UMBRELLA, UmbrellaEthereum_UMBRELLA_BATCH_HELPER as UMBRELLA_BATCH_HELPER, UmbrellaEthereum_UMBRELLA_CONFIG_ENGINE as UMBRELLA_CONFIG_ENGINE, UmbrellaEthereum_UMBRELLA_IMPL as UMBRELLA_IMPL, UmbrellaEthereum_UMBRELLA_REWARDS_CONTROLLER as UMBRELLA_REWARDS_CONTROLLER, UmbrellaEthereum_UMBRELLA_REWARDS_CONTROLLER_IMPL as UMBRELLA_REWARDS_CONTROLLER_IMPL, UmbrellaEthereum_UMBRELLA_STAKE_ASSETS as UMBRELLA_STAKE_ASSETS, UmbrellaEthereum_UMBRELLA_STAKE_TOKEN_IMPL as UMBRELLA_STAKE_TOKEN_IMPL };
}

export { CHAIN_ID as C, DATA_AGGREGATION_HELPER as D, PERMISSIONED_PAYLOADS_CONTROLLER as P, UmbrellaEthereum as U, UMBRELLA as a, UMBRELLA_IMPL as b, UMBRELLA_STAKE_TOKEN_IMPL as c, UMBRELLA_REWARDS_CONTROLLER as d, UMBRELLA_REWARDS_CONTROLLER_IMPL as e, PERMISSIONED_PAYLOADS_CONTROLLER_EXECUTOR as f, UMBRELLA_BATCH_HELPER as g, UMBRELLA_CONFIG_ENGINE as h, DEFICIT_OFFSET_CLINIC_STEWARD as i, UMBRELLA_STAKE_ASSETS as j };
